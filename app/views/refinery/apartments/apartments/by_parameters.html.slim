#l-apartments.__parameters-page ng-controller="ApartmentsByParametersController as a"
  = render 'nav'

  .row.collapse
    .small-12.columns.wrap
      .row.collapse.b-parameters
        .small-12.columns
          h1.upcase Parameters:
          = form_tag refinery.search_apartments_apartments_path, class: 'b-filters' do |f|
            .row
              // Price
              .small-4.columns
                .row.collapse
                  .small-12.columns
                    h3.upcase = t('forms.price')+':'
                // Inputs
                .row.collapse
                  .small-2.columns.text-left
                    label for="price-min" = t('forms.from')
                  .small-4.columns.input data-content-after=(t('defaults.currency_sign'))
                    = text_field_tag :price_min, '0', id: 'price-min', 'ng-model' => 'a.minPrice', 'ng-init' => "a.minPrice = 0"
                  .small-2.columns.text-center
                    label for="price-max" = t('forms.to')
                  .small-4.columns.left.input data-content-after=(t('defaults.currency_sign'))
                    = number_field_tag :price_end, '', id: 'price-max', 'ng-model' => 'a.maxPrice', 'ng-init' => "a.maxPrice = #{@apartments_decorator.most_expensive_price}"
                .row.collapse
                  // Minimum price and maximum price gets from database
                  .small-12.columns
                    #appartments-price-slider data-min-value="0" data-max-value=(@apartments_decorator.most_expensive_price)

              // Floorspace
              .small-4.columns
                .row.collapse
                  .small-12.columns
                    h3.upcase = t('forms.floorspace')+':'
                // Inputs
                .row.collapse
                  .small-2.columns.text-left
                    label for="foorspace-min" = t('forms.from')
                  .small-4.columns.input data-content-after=(t('defaults.square_sign'))
                    = number_field_tag :floorspace_min, '0', id: 'floorspace-min', 'ng-model' => 'a.minFloorSpace', 'ng-init' => "a.minFloorSpace = 0"
                  .small-2.columns.text-center
                    label for="floorspace-max" = t('forms.to')
                  .small-4.columns.input data-content-after=(t('defaults.square_sign'))
                    = number_field_tag :floorspace_max, '0', id: 'floorspace-max', 'ng-model' => 'a.maxFloorSpace', 'ng-init' => "a.maxFloorSpace = #{@apartments_decorator.max_floor_space}"
                .row.collapse
                  // Minimum price and maximum price gets from database
                  .small-.columns
                    #appartments-floorspace-slider data-min-value="0" data-max-value=(@apartments_decorator.max_floor_space)

              // Floor
              .small-4.columns
                .row.collapse
                  .small-12.columns
                    h3.upcase = t('forms.floor')+':'
                // Inputs
                .row.collapse
                  .small-2.columns.text-left
                    label for="floor-min" = t('forms.from')
                  .small-2.columns
                    = number_field_tag :floor_min, '0', id: 'floor-min', 'ng-model' => 'a.minFloor', 'ng-init' => 'a.minFloor = 0'
                  .small-2.columns.text-center
                    label for="floor-max" = t('forms.to')
                  .small-2.columns.left
                    = number_field_tag :floor_max, '0', id: 'floor-max', 'ng-model' => 'a.maxFloor', 'ng-init' => "a.maxFloor = #{@apartments_decorator.max_floor}"
                .row.collapse
                  // Minimum price and maximum price gets from database
                  .small-10.left.columns
                    #appartments-floor-slider data-min-value="0" data-max-value=(@apartments_decorator.max_floor)

            .row.rooms
              .small-2.columns
                h3.upcase = t('forms.rooms')+':'

              .small-10.left.columns
                ul.small-block-grid-6
                  li
                    = check_box_tag :one_room, '1', false, id: 'one-room', 'ng-model' => 'a.cbOneRoom'
                    label for="one-room" = t('forms.one')
                  li
                    = check_box_tag :two_rooms, '2', false, id: 'two-rooms', 'ng-model' => 'a.cbTwoRooms'
                    label for="two-rooms" = t('forms.two')
                  li
                    = check_box_tag :three_rooms, '3', false, id: 'three-rooms', 'ng-model' => 'a.cbThreeRooms'
                    label for="three-rooms" = t('forms.three')
                  li
                    = check_box_tag :four_rooms, '4', false, id: 'four-rooms', 'ng-model' => 'a.cbFourRooms'
                    label for="four-rooms" = t('forms.four')
                  li
                    = check_box_tag :penthouse, 'penthouse', false, id: 'penthouse', 'ng-model' => 'a.cbPenthouse'
                    label for="penthouse" = t('forms.penthouse')
                  li
                    = check_box_tag :grounds, 'grounds', false, id: 'grounds', 'ng-model' => 'a.cbGrounds'
                    label for="grounds" = t('forms.grounds')

      // Results
      .row.collapse.b-results
        .small-12.columns
          .row
            .small-8.columns
              h1.upcase = t('forms.results')+':'
            .small-2.right.columns.total
          .row.collapse.items ng-init="a.records = #{@apartments_json}"
            .small-12.columns
              .row.item ng-repeat="apartment in a.records | filter:priceFilter | filter:floorSpaceFilter | filter:floorFilter | filter:roomsFilter |filter:groundsFliter"
                .small-3.columns
                  .id
                    | {{apartment.unit_id}}
                  .clear
                  div ng-bind-html="apartment.photo_tag | unsafe"
                .small-6.columns
                  ' {{apartment.rooms}}
                  ul.attributes.small-block-grid-2
                    li
                      ' {{apartment.layout_t}}:
                      b
                       ' {{apartment.layout}}
                    li
                      ' {{apartment.floor_t}}:
                      b
                        | {{apartment.floor}}
                    li
                      ' {{apartment.balcony_terace_area_t}}:
                      b
                        ' {{apartment.balcony_terace_area_decorated}}
                    li
                      ' {{apartment.total_floors_t}}:
                      b
                        ' {{apartment.total_floors}}
                    li
                      ' {{apartment.balcony_terace_area_t}}:
                      b
                        ' {{apartment.balcony_terace_area_decorated}}
                    li
                      ' {{apartment.apartment_area_t}}:
                      b
                        ' {{apartment.apartment_area_decorated}}

                  .price
                    ' {{apartment.price_t}}:
                    span.upcase
                      ' {{apartment.price_decorated}}

                .small-3.columns.go
                  .more.upcase
                    a ng-href="{{a.path(apartment)}}" see more


