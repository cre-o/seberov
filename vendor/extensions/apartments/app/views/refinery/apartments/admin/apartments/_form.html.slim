= form_for [refinery, :apartments_admin, @apartment] do |f|
  = render '/refinery/admin/error_messages',
    :object => @apartment,
    :include_object_name => true
  .field
    label = t 'forms.unit_id'
    = f.text_field :unit_id, :class => 'larger widest'
  .field
    = t 'forms.block'
    = f.text_field :block
  .field
    = f.label :photo
    = render '/refinery/admin/image_picker',
      :f => f,
      :field => :photo_id,
      :image => @apartment.photo,
      :toggle_image_display => false

  ul.small-block-grid-3
    li
      .field
        label = t 'forms.floor'
        = f.number_field :floor
    li
      .field
        label = t 'forms.total_floors'
        = f.text_field :total_floors
    li
      .field
        label = t 'forms.layout'
        = f.text_field :layout
    li
      .field
        label = t 'forms.apartment_area'
        = f.text_field :apartment_area
    li
      .field
        label = t 'forms.balcony_terace_area'
        = f.text_field :balcony_terace_area
    li
      .field
        label = t 'forms.front_yard_area'
        = f.text_field :front_yard_area
    li
      .field
        label = t 'forms.price'
        = f.text_field :price
    li
      .field
        label = t 'forms.parking_price'
        = f.text_field :parking_price
    li
      .field
        label = t 'forms.state'
        = f.select :state, Refinery::Apartments::Apartment::STATES.collect { |p| [ p, p ] }

  .nested-fields
    = link_to_add_association 'add floor', f, :apartment_floors

  // Fields for new floors
  h4 = t('refinery.admin.apartment_floor_data')
  = f.simple_fields_for :apartment_floors do |af|
    = render 'apartment_floor_fields', f: af
    .links
      = link_to_add_association 'add floor', f, :apartment_floors

  = render '/refinery/admin/form_actions', :f => f,
    :continue_editing => false,
    :delete_title => t('delete', :scope => 'refinery.apartments.admin.apartments.apartment'),
    :delete_confirmation => t('message', :scope => 'refinery.admin.delete', :title => @apartment.block)
